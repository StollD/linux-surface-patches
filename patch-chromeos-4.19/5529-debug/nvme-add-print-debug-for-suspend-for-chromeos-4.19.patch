From 361f1e903e2046ea65f50f7fa84323576e605898 Mon Sep 17 00:00:00 2001
From: kitakar5525 <34676735+kitakar5525@users.noreply.github.com>
Date: Tue, 20 Aug 2019 18:31:03 +0900
Subject: [PATCH] nvme: add print debug for suspend for chromeos-4.19

---
 drivers/nvme/host/pci.c | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/drivers/nvme/host/pci.c b/drivers/nvme/host/pci.c
index 00f07bc14677..b59099048032 100644
--- a/drivers/nvme/host/pci.c
+++ b/drivers/nvme/host/pci.c
@@ -2670,6 +2670,8 @@ static int nvme_simple_resume(struct device *dev)
 	struct pci_dev *pdev = to_pci_dev(dev);
 	struct nvme_dev *ndev = pci_get_drvdata(pdev);
 
+	pr_info("DEBUG: Passed %s %d \n",__FUNCTION__,__LINE__);
+
 	nvme_reset_ctrl(&ndev->ctrl);
 	return 0;
 }
@@ -2679,6 +2681,8 @@ static int nvme_resume(struct device *dev)
 	struct pci_dev *pdev = to_pci_dev(dev);
 	struct nvme_dev *ndev = pci_get_drvdata(pdev);
 
+	pr_info("DEBUG: Passed %s %d \n",__FUNCTION__,__LINE__);
+
 	return pm_resume_via_firmware() || !ndev->ctrl.npss ||
 	       (ndev->ctrl.quirks & NVME_QUIRK_SIMPLE_SUSPEND) ?
 		nvme_simple_resume(dev) : nvme_make_operational(ndev);
@@ -2689,6 +2693,8 @@ static int nvme_simple_suspend(struct device *dev)
 	struct pci_dev *pdev = to_pci_dev(dev);
 	struct nvme_dev *ndev = pci_get_drvdata(pdev);
 
+	pr_info("DEBUG: Passed %s %d \n",__FUNCTION__,__LINE__);
+
 	nvme_dev_disable(ndev, true);
 	return 0;
 }
@@ -2698,6 +2704,14 @@ static int nvme_suspend(struct device *dev)
 	struct pci_dev *pdev = to_pci_dev(dev);
 	struct nvme_dev *ndev = pci_get_drvdata(pdev);
 
+	if (pm_suspend_via_firmware() || !ndev->ctrl.npss) {
+		pr_info("DEBUG: Passed %s %d, (pm_suspend_via_firmware() || !ndev->ctrl.npss)==true \n",__FUNCTION__,__LINE__);
+		pr_info("DEBUG: nvme_suspend(): using generic PCI power settings\n");
+	} else {
+		pr_info("DEBUG: Passed %s %d, (pm_suspend_via_firmware() || !ndev->ctrl.npss)==false \n",__FUNCTION__,__LINE__);
+		pr_info("DEBUG: nvme_suspend(): using host managed power settings\n");
+	}
+
 	/*
 	 * The platform does not remove power for a kernel managed suspend so
 	 * use host managed nvme power settings for lowest idle power. This
-- 
2.22.1

